{"ast":null,"code":"// store.js\nimport { createStore } from 'vuex';\nimport axios from 'axios';\n\n// Configure Axios with the base URL for the backend\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  // Replace with your Spring Boot backend's base URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default createStore({\n  state: {\n    user: {\n      email: '',\n      password: ''\n    },\n    isAuthenticated: false\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n      state.isAuthenticated = !!user.email; // Set authentication status\n    },\n    logoutUser(state) {\n      state.user = {\n        email: '',\n        password: ''\n      };\n      state.isAuthenticated = false;\n    }\n  },\n  actions: {\n    async signupUser({\n      commit\n    }, user) {\n      try {\n        const response = await apiClient.post('/signup', user);\n        commit('setUser', response.data);\n        return response.data;\n      } catch (error) {\n        console.error('Error during signup:', error);\n        throw error;\n      }\n    },\n    async loginUser({\n      commit\n    }, user) {\n      try {\n        const response = await apiClient.post('/login', user);\n        commit('setUser', response.data);\n        return response.data;\n      } catch (error) {\n        console.error('Error during login:', error);\n        throw error;\n      }\n    },\n    logoutUser({\n      commit\n    }) {\n      commit('logoutUser');\n    }\n  },\n  getters: {\n    getUserEmail: state => state.user.email,\n    getUserPassword: state => state.user.password,\n    isAuthenticated: state => state.isAuthenticated\n  }\n});","map":{"version":3,"names":["createStore","axios","apiClient","create","baseURL","headers","state","user","email","password","isAuthenticated","mutations","setUser","logoutUser","actions","signupUser","commit","response","post","data","error","console","loginUser","getters","getUserEmail","getUserPassword"],"sources":["C:/Users/HP-15/Desktop/parlouradmin/parlouradmin/src/store.js"],"sourcesContent":["// store.js\r\nimport { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\n// Configure Axios with the base URL for the backend\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:8080/api', // Replace with your Spring Boot backend's base URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    isAuthenticated: false,\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n      state.isAuthenticated = !!user.email; // Set authentication status\r\n    },\r\n    logoutUser(state) {\r\n      state.user = { email: '', password: '' };\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n  actions: {\r\n    async signupUser({ commit }, user) {\r\n      try {\r\n        const response = await apiClient.post('/signup', user);\r\n        commit('setUser', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error during signup:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    async loginUser({ commit }, user) {\r\n      try {\r\n        const response = await apiClient.post('/login', user);\r\n        commit('setUser', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error during login:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    logoutUser({ commit }) {\r\n      commit('logoutUser');\r\n    },\r\n  },\r\n  getters: {\r\n    getUserEmail: (state) => state.user.email,\r\n    getUserPassword: (state) => state.user.password,\r\n    isAuthenticated: (state) => state.isAuthenticated,\r\n  },\r\n});\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeL,WAAW,CAAC;EACzBM,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACN,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;MACjBD,KAAK,CAACI,eAAe,GAAG,CAAC,CAACH,IAAI,CAACC,KAAK,CAAC,CAAC;IACxC,CAAC;IACDK,UAAUA,CAACP,KAAK,EAAE;MAChBA,KAAK,CAACC,IAAI,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACxCH,KAAK,CAACI,eAAe,GAAG,KAAK;IAC/B;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAET,IAAI,EAAE;MACjC,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMf,SAAS,CAACgB,IAAI,CAAC,SAAS,EAAEX,IAAI,CAAC;QACtDS,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAChC,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,MAAMA,KAAK;MACb;IACF,CAAC;IACD,MAAME,SAASA,CAAC;MAAEN;IAAO,CAAC,EAAET,IAAI,EAAE;MAChC,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMf,SAAS,CAACgB,IAAI,CAAC,QAAQ,EAAEX,IAAI,CAAC;QACrDS,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAChC,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,MAAMA,KAAK;MACb;IACF,CAAC;IACDP,UAAUA,CAAC;MAAEG;IAAO,CAAC,EAAE;MACrBA,MAAM,CAAC,YAAY,CAAC;IACtB;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,YAAY,EAAGlB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK;IACzCiB,eAAe,EAAGnB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACE,QAAQ;IAC/CC,eAAe,EAAGJ,KAAK,IAAKA,KAAK,CAACI;EACpC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}