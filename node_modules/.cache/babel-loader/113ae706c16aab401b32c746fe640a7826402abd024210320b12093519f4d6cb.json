{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'; // Uncomment this if using the backend\n\nexport default {\n  name: \"AdminLogIn\",\n  data() {\n    return {\n      isPasswordVisible: false,\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    },\n    async handleLogin() {\n      try {\n        /* \r\n        // Uncomment this block when backend is available\r\n        const response = await axios.post('http://localhost:5000/api/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n          const { token } = response.data;\r\n        localStorage.setItem('token', token); // Store JWT token\r\n        */\n\n        // Simulated success\n        console.log(\"Simulating successful login.\");\n        localStorage.setItem('token', 'fake-token'); // Simulated token storage\n\n        this.$router.push('/admin-panel'); // Redirect to admin panel\n      } catch (error) {\n        alert(\"An error occurred during login. Please try again.\"); // Simulated error\n        // alert(error.response.data.message); // Use this with backend\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","isPasswordVisible","email","password","methods","togglePasswordVisibility","handleLogin","console","log","localStorage","setItem","$router","push","error","alert"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\LogIn.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2 class=\"login-heading\">Log In</h2>\r\n    <form class=\"login-form\" @submit.prevent=\"handleLogin\">\r\n      <div class=\"form-group email\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group password-group\">\r\n        <label for=\"password\">Password</label>\r\n        <div class=\"password-container\">\r\n          <input\r\n            :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            class=\"password-toggle\"\r\n            @click=\"togglePasswordVisibility\"\r\n            :aria-label=\"isPasswordVisible ? 'Hide password' : 'Show password'\"\r\n          >\r\n            {{ isPasswordVisible ? 'Hide' : 'Show' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"login-button\">Log In</button>\r\n      </div>\r\n      <div class=\"form-group already-account\">\r\n        <span>\r\n          Do you have an account? \r\n          <router-link to=\"/sign-up\">Sign Up</router-link>\r\n        </span>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'; // Uncomment this if using the backend\r\n\r\nexport default {\r\n  name: \"AdminLogIn\",\r\n  data() {\r\n    return {\r\n      isPasswordVisible: false,\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    togglePasswordVisibility() {\r\n      this.isPasswordVisible = !this.isPasswordVisible;\r\n    },\r\n    async handleLogin() {\r\n      try {\r\n        /* \r\n        // Uncomment this block when backend is available\r\n        const response = await axios.post('http://localhost:5000/api/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        const { token } = response.data;\r\n        localStorage.setItem('token', token); // Store JWT token\r\n        */\r\n\r\n        // Simulated success\r\n        console.log(\"Simulating successful login.\");\r\n        localStorage.setItem('token', 'fake-token'); // Simulated token storage\r\n\r\n        this.$router.push('/admin-panel'); // Redirect to admin panel\r\n      } catch (error) {\r\n        alert(\"An error occurred during login. Please try again.\"); // Simulated error\r\n        // alert(error.response.data.message); // Use this with backend\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-image: url(\"@/assets/goldbg.jpg\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.login-heading {\r\n  font-size: 3rem;\r\n  color: #fff;\r\n  margin-bottom: 1.5rem;\r\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n\r\n.login-form {\r\n  border: 1px solid gold;\r\n  padding: 2.5rem;\r\n  border-radius: 12px;\r\n  box-shadow: 10px 10px 10px 10px rgba(0, 0, 0, 0.3);\r\n  width: 90%;\r\n  max-width: 450px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.login-form:hover {\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.email{\r\n  background-color: black;\r\n  color: ;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.75rem;\r\n  font-weight: 600;\r\n  color: #ddd;\r\n  font-size: 1.1rem;\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: none;\r\n  border-radius: 30px;\r\n  font-size: 1rem;\r\n  background-color: black;\r\n  color: #fff;\r\n  box-sizing: border-box;\r\n  transition: background-color 0.3s ease, border 0.3s ease;\r\n}\r\n\r\ninput:focus {\r\n  background-color: black;\r\n  outline: none;\r\n  border: 2px solid gold;\r\n  border-radius: 30px;\r\n}\r\n\r\n.password-container {\r\n  position: relative;\r\n}\r\n\r\n.password-toggle {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  color: gold;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: black;\r\n  color: #fff;\r\n  border: none;\r\n  border: 2px solid gold;\r\n  border-radius: 30px;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, transform 0.2s ease-in-out;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: black;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.login-button:active {\r\n  background-color: black;\r\n  transform: translateY(1px);\r\n  border: 1px solid gold;\r\n}\r\n\r\n.already-account {\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n}\r\n\r\n.already-account a {\r\n  color: blue;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n.already-account a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n"],"mappings":";AAgDA;;AAEA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACJ,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;IAClD,CAAC;IACD,MAAMK,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;;;;;;;;;;QAWA;QACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE;;QAE7C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,EAAE;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdC,KAAK,CAAC,mDAAmD,CAAC,EAAE;QAC5D;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}