{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Razorpay Payment Gateway\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.initiatePayment && $options.initiatePayment(...args))\n  }, \"Pay Now\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","initiatePayment"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\RazorPay.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Razorpay Payment Gateway</h1>\r\n      <button @click=\"initiatePayment\">Pay Now</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    methods: {\r\n      initiatePayment() {\r\n        const options = {\r\n          key: \"YOUR_RAZORPAY_KEY\", // Replace with your Razorpay key\r\n          amount: 1000, // Amount in the smallest currency unit (e.g., 1000 paise = â‚¹10)\r\n          currency: \"INR\",\r\n          name: \"Your Business Name\",\r\n          description: \"Test Transaction\",\r\n          image: \"https://your-logo-url.com\", // Optional\r\n          handler: function (response) {\r\n            alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\r\n          },\r\n          prefill: {\r\n            name: \"Customer Name\",\r\n            email: \"customer@example.com\",\r\n            contact: \"9999999999\",\r\n          },\r\n          notes: {\r\n            address: \"Customer Address\",\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\",\r\n          },\r\n        };\r\n  \r\n        // Ensure Razorpay is available\r\n        if (typeof Razorpay !== \"undefined\") {\r\n          const rzp = new Razorpay(options);\r\n          rzp.open();\r\n          rzp.on(\"payment.failed\", function (response) {\r\n            alert(\"Payment Failed: \" + response.error.description);\r\n          });\r\n        } else {\r\n          alert(\"Razorpay script not loaded properly.\");\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  button {\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    background-color: #3399cc;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #287a99;\r\n  }\r\n  </style>\r\n  "],"mappings":";;uBACIA,mBAAA,CAGM,c,0BAFJC,mBAAA,CAAiC,YAA7B,0BAAwB,sBAC5BA,mBAAA,CAAiD;IAAxCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}