{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nexport default {\n  data() {\n    return {\n      clients: [{\n        id: 1,\n        name: 'John Doe',\n        email: 'john@example.com',\n        phone: '123-456-7890',\n        lastVisit: '2024-12-15'\n      }, {\n        id: 2,\n        name: 'Jane Smith',\n        email: 'jane@example.com',\n        phone: '098-765-4321',\n        lastVisit: '2024-11-30'\n      }, {\n        id: 3,\n        name: 'Alice Johnson',\n        email: 'alice@example.com',\n        phone: '567-890-1234',\n        lastVisit: '2024-10-20'\n      }]\n    };\n  },\n  methods: {\n    viewDetails(id) {\n      // Navigate to the client details page or open a modal\n      const client = this.clients.find(client => client.id === id);\n      if (client) {\n        alert(`Client Details:\\n\\nName: ${client.name}\\nEmail: ${client.email}\\nPhone: ${client.phone}\\nLast Visit: ${client.lastVisit}`);\n      }\n    },\n    addClient() {\n      // Open a form or modal to add a new client\n      const newClient = {\n        id: this.clients.length + 1,\n        name: prompt(\"Enter client's name:\"),\n        email: prompt(\"Enter client's email:\"),\n        phone: prompt(\"Enter client's phone number:\"),\n        lastVisit: new Date().toISOString().split('T')[0] // today's date\n      };\n      if (newClient.name && newClient.email && newClient.phone) {\n        this.clients.push(newClient);\n        alert(\"New client added successfully!\");\n      } else {\n        alert(\"Please fill in all the details!\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","clients","id","name","email","phone","lastVisit","methods","viewDetails","client","find","alert","addClient","newClient","length","prompt","Date","toISOString","split","push"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\ClientPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"client-page\">\r\n      <h1>Clients</h1>\r\n      <v-container fluid>\r\n        <v-row>\r\n          <v-col v-for=\"client in clients\" :key=\"client.id\" cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-card class=\"client-card\" elevation=\"12\">\r\n              <v-img :src=\"require('@/assets/salon.jpg')\" class=\"card-image\" height=\"200px\">\r\n                <v-overlay opacity=\"0.3\">\r\n                  <v-row align=\"center\" justify=\"center\">\r\n                    <v-btn class=\"view-btn\" @click=\"viewDetails(client.id)\" color=\"gold\" dark>View Details</v-btn>\r\n                  </v-row>\r\n                </v-overlay>\r\n              </v-img>\r\n              <v-card-title class=\"client-name\">{{ client.name }}</v-card-title>\r\n              <v-card-subtitle class=\"client-email\">{{ client.email }}</v-card-subtitle>\r\n              <v-card-text>\r\n                <p><strong>Phone:</strong> {{ client.phone }}</p>\r\n                <p><strong>Last Visit:</strong> {{ client.lastVisit }}</p>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n  \r\n      <!-- Add New Client Button -->\r\n      <v-btn @click=\"addClient\" class=\"add-client-btn\" color=\"gold\" dark>\r\n        Add New Client\r\n      </v-btn>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        clients: [\r\n          { id: 1, name: 'John Doe', email: 'john@example.com', phone: '123-456-7890', lastVisit: '2024-12-15' },\r\n          { id: 2, name: 'Jane Smith', email: 'jane@example.com', phone: '098-765-4321', lastVisit: '2024-11-30' },\r\n          { id: 3, name: 'Alice Johnson', email: 'alice@example.com', phone: '567-890-1234', lastVisit: '2024-10-20' }\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      viewDetails(id) {\r\n        // Navigate to the client details page or open a modal\r\n        const client = this.clients.find(client => client.id === id);\r\n        if (client) {\r\n          alert(`Client Details:\\n\\nName: ${client.name}\\nEmail: ${client.email}\\nPhone: ${client.phone}\\nLast Visit: ${client.lastVisit}`);\r\n        }\r\n      },\r\n      addClient() {\r\n        // Open a form or modal to add a new client\r\n        const newClient = {\r\n          id: this.clients.length + 1,\r\n          name: prompt(\"Enter client's name:\"),\r\n          email: prompt(\"Enter client's email:\"),\r\n          phone: prompt(\"Enter client's phone number:\"),\r\n          lastVisit: new Date().toISOString().split('T')[0] // today's date\r\n        };\r\n        if (newClient.name && newClient.email && newClient.phone) {\r\n          this.clients.push(newClient);\r\n          alert(\"New client added successfully!\");\r\n        } else {\r\n          alert(\"Please fill in all the details!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .client-page {\r\n    background-color: black;\r\n    color: white;\r\n    padding: 40px;\r\n    font-family: 'Arial', sans-serif;\r\n  }\r\n  \r\n  h1 {\r\n    text-align: center;\r\n    color: gold;\r\n    font-size: 3rem;\r\n    margin-bottom: 40px;\r\n  }\r\n  \r\n  .v-row {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .client-card {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    color: white;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n    margin-bottom: 30px;\r\n    position: relative;\r\n  }\r\n  \r\n  .card-image {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .client-name {\r\n    color: gold;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .client-email {\r\n    color: #f5c518;\r\n    font-size: 1.1rem;\r\n  }\r\n  \r\n  .card-text {\r\n    color: white;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .view-btn {\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-weight: bold;\r\n    border-radius: 20px;\r\n    padding: 10px 20px;\r\n  }\r\n  \r\n  .add-client-btn {\r\n    display: block;\r\n    width: 200px;\r\n    margin: 40px auto;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n    border-radius: 50px;\r\n  }\r\n  \r\n  .v-btn:hover {\r\n    background-color: black;\r\n    color: gold;\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .v-card-title, .v-card-subtitle, .v-card-text {\r\n    padding: 10px 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;AAiCE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,SAAS,EAAE;MAAa,CAAC,EACtG;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,SAAS,EAAE;MAAa,CAAC,EACxG;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,KAAK,EAAE,mBAAmB;QAAEC,KAAK,EAAE,cAAc;QAAEC,SAAS,EAAE;MAAa;IAE/G,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACN,EAAE,EAAE;MACd;MACA,MAAMO,MAAK,GAAI,IAAI,CAACR,OAAO,CAACS,IAAI,CAACD,MAAK,IAAKA,MAAM,CAACP,EAAC,KAAMA,EAAE,CAAC;MAC5D,IAAIO,MAAM,EAAE;QACVE,KAAK,CAAC,4BAA4BF,MAAM,CAACN,IAAI,YAAYM,MAAM,CAACL,KAAK,YAAYK,MAAM,CAACJ,KAAK,iBAAiBI,MAAM,CAACH,SAAS,EAAE,CAAC;MACnI;IACF,CAAC;IACDM,SAASA,CAAA,EAAG;MACV;MACA,MAAMC,SAAQ,GAAI;QAChBX,EAAE,EAAE,IAAI,CAACD,OAAO,CAACa,MAAK,GAAI,CAAC;QAC3BX,IAAI,EAAEY,MAAM,CAAC,sBAAsB,CAAC;QACpCX,KAAK,EAAEW,MAAM,CAAC,uBAAuB,CAAC;QACtCV,KAAK,EAAEU,MAAM,CAAC,8BAA8B,CAAC;QAC7CT,SAAS,EAAE,IAAIU,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MACpD,CAAC;MACD,IAAIL,SAAS,CAACV,IAAG,IAAKU,SAAS,CAACT,KAAI,IAAKS,SAAS,CAACR,KAAK,EAAE;QACxD,IAAI,CAACJ,OAAO,CAACkB,IAAI,CAACN,SAAS,CAAC;QAC5BF,KAAK,CAAC,gCAAgC,CAAC;MACzC,OAAO;QACLA,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}