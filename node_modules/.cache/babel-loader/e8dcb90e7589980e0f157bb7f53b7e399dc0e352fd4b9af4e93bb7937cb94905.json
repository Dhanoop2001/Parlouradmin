{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_2 = [\"type\"];\nconst _hoisted_3 = {\n  class: \"icon\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = {\n  class: \"segment\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"success-popup\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"signup-container\",\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.handleSignUp && $options.handleSignUp(...args), [\"prevent\"]))\n  }, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"segment\"\n  }, [_createElementVNode(\"h1\", null, \"Sign Up\")], -1 /* HOISTED */)), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.validateName && $options.validateName(...args)),\n    required: \"\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.name]]), $data.errors.name ? (_openBlock(), _createElementBlock(\"small\", _hoisted_1, _toDisplayString($data.errors.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.isPasswordVisible ? 'text' : 'password',\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event),\n    onBlur: _cache[4] || (_cache[4] = (...args) => $options.validatePassword && $options.validatePassword(...args)),\n    required: \"\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelDynamic, $data.password]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"unit\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.togglePasswordVisibility && $options.togglePasswordVisibility(...args))\n  }, [_createElementVNode(\"i\", _hoisted_3, _toDisplayString($data.isPasswordVisible ? 'Hide' : 'Show'), 1 /* TEXT */)]), $data.errors.password ? (_openBlock(), _createElementBlock(\"small\", _hoisted_4, _toDisplayString($data.errors.password), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.gender = $event),\n    required: \"\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Select your gender\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"male\"\n  }, \"Men\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"female\"\n  }, \"Women\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.gender]])]), _createElementVNode(\"button\", {\n    class: \"red\",\n    type: \"submit\",\n    disabled: $data.isSubmitting\n  }, _toDisplayString($data.isSubmitting ? 'Submitting...' : 'Sign Up'), 9 /* TEXT, PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, [_cache[11] || (_cache[11] = _createTextVNode(\" Already have an account? \")), _createVNode(_component_router_link, {\n    to: \"/log-in\"\n  }, {\n    default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"Login\")])),\n    _: 1 /* STABLE */\n  })])]), $data.showSuccessPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[12] || (_cache[12] = _createElementVNode(\"p\", null, \"Registration Successful!\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closePopup && $options.closePopup(...args))\n  }, \"OK\")])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","handleSignUp","_createElementVNode","type","placeholder","$event","$data","name","onBlur","validateName","required","errors","_hoisted_1","_toDisplayString","_createCommentVNode","email","isPasswordVisible","password","validatePassword","_hoisted_2","onClick","togglePasswordVisibility","_hoisted_3","_hoisted_4","gender","value","disabled","isSubmitting","_hoisted_5","_hoisted_6","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_","showSuccessPopup","_hoisted_7","closePopup"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n  <form class=\"signup-container\" @submit.prevent=\"handleSignUp\">\r\n    <div class=\"segment\">\r\n      <h1>Sign Up</h1>\r\n    </div>\r\n\r\n    <label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        v-model=\"name\"\r\n        @blur=\"validateName\"\r\n        required\r\n      />\r\n      <small v-if=\"errors.name\" class=\"error-message\">{{ errors.name }}</small>\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email Address\"\r\n        v-model=\"email\"\r\n        required\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n        placeholder=\"Password\"\r\n        v-model=\"password\"\r\n        @blur=\"validatePassword\"\r\n        required\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        class=\"unit\"\r\n        @click=\"togglePasswordVisibility\"\r\n      >\r\n        <i class=\"icon\">{{ isPasswordVisible ? 'Hide' : 'Show' }}</i>\r\n      </button>\r\n      <small v-if=\"errors.password\" class=\"error-message\">{{ errors.password }}</small>\r\n    </label>\r\n\r\n    <label>\r\n      <select v-model=\"gender\" required>\r\n        <option value=\"\" disabled>Select your gender</option>\r\n        <option value=\"male\">Men</option>\r\n        <option value=\"female\">Women</option>\r\n      </select>\r\n    </label>\r\n\r\n    <button class=\"red\" type=\"submit\" :disabled=\"isSubmitting\">\r\n      {{ isSubmitting ? 'Submitting...' : 'Sign Up' }}\r\n    </button>\r\n\r\n    <div class=\"segment\">\r\n      <span>\r\n        Already have an account?\r\n        <router-link to=\"/log-in\">Login</router-link>\r\n      </span>\r\n    </div>\r\n\r\n    <div v-if=\"showSuccessPopup\" class=\"success-popup\">\r\n      <p>Registration Successful!</p>\r\n      <button @click=\"closePopup\">OK</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SignUpPage\",\r\n  data() {\r\n    return {\r\n      isPasswordVisible: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      errors: {\r\n        name: \"\",\r\n        password: \"\",\r\n      },\r\n      showSuccessPopup: false,\r\n      isSubmitting: false,\r\n    };\r\n  },\r\n  methods: {\r\n    validateName() {\r\n      const namePattern = /^[A-Za-z\\s]+$/;\r\n      if (!this.name) {\r\n        this.errors.name = \"Name is required.\";\r\n      } else if (!namePattern.test(this.name)) {\r\n        this.errors.name = \"Name must contain only alphabets.\";\r\n      } else {\r\n        this.errors.name = \"\";\r\n      }\r\n    },\r\n    validatePassword() {\r\n      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n      if (!this.password) {\r\n        this.errors.password = \"Password is required.\";\r\n      } else if (!passwordPattern.test(this.password)) {\r\n        this.errors.password =\r\n          \"Password must contain at least 8 characters, including both letters and numbers.\";\r\n      } else {\r\n        this.errors.password = \"\";\r\n      }\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.isPasswordVisible = !this.isPasswordVisible;\r\n    },\r\n    handleSignUp() {\r\n      this.validateName();\r\n      this.validatePassword();\r\n\r\n      if (!this.errors.name && !this.errors.password && this.email && this.gender) {\r\n        this.isSubmitting = true;\r\n        setTimeout(() => {\r\n          this.showSuccessPopup = true;\r\n          this.isSubmitting = false;\r\n        }, 2000);\r\n      } else {\r\n        alert(\"Please fill out all fields correctly.\");\r\n      }\r\n    },\r\n    closePopup() {\r\n      this.showSuccessPopup = false;\r\n      this.$router.push(\"/log-in\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@use \"sass:math\";\r\n\r\n$ruler: 16px;\r\n$color-red: #ae1100;\r\n$color-bg: #ebecf0;\r\n$color-shadow: #babecc;\r\n$color-white: #fff;\r\n\r\nbody {\r\n  background-color: $color-bg;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.signup-container {\r\n  padding: $ruler;\r\n  width: math.mul($ruler, 20);\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n\r\n.segment {\r\n  padding: math.mul($ruler, 2) 0;\r\n}\r\n\r\nbutton,\r\ninput,\r\nselect {\r\n  border: 0;\r\n  outline: 0;\r\n  font-size: $ruler;\r\n  border-radius: math.mul($ruler, 20);\r\n  padding: $ruler;\r\n  background-color: $color-bg;\r\n  text-shadow: 1px 1px 0 $color-white;\r\n  box-shadow: inset 2px 2px 5px $color-shadow, inset -5px -5px 10px $color-white;\r\n  transition: all 0.2s ease-in-out;\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  color: #61677c;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  box-shadow: -5px -5px 20px $color-white, 5px 5px 20px $color-shadow;\r\n\r\n  &:hover {\r\n    box-shadow: -2px -2px 5px $color-white, 2px 2px 5px $color-shadow;\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: inset 1px 1px 2px $color-shadow, inset -1px -1px 2px $color-white;\r\n  }\r\n\r\n  &.red {\r\n    color: $color-red;\r\n  }\r\n\r\n  &.unit {\r\n    border-radius: $ruler / 2;\r\n    width: math.mul($ruler, 3);\r\n    height: math.mul($ruler, 3);\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: math.mul($ruler, 1.2);\r\n  }\r\n}\r\n\r\n.error-message {\r\n  color: #ff4d4f;\r\n  font-size: 0.9rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.success-popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: $color-white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  z-index: 1000;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}