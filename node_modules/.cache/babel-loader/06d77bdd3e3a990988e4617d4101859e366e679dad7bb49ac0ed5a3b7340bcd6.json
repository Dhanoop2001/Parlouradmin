{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"SignUpPage\",\n  data() {\n    return {\n      isPasswordVisible: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      gender: \"\",\n      errors: {\n        name: \"\",\n        password: \"\"\n      },\n      showSuccessPopup: false,\n      isSubmitting: false\n    };\n  },\n  methods: {\n    validateName() {\n      const namePattern = /^[A-Za-z\\s]+$/;\n      if (!this.name) {\n        this.errors.name = \"Full name is required.\";\n      } else if (!namePattern.test(this.name)) {\n        this.errors.name = \"Name must contain only alphabets.\";\n      } else {\n        this.errors.name = \"\";\n      }\n    },\n    validatePassword() {\n      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      if (!this.password) {\n        this.errors.password = \"Password is required.\";\n      } else if (!passwordPattern.test(this.password)) {\n        this.errors.password = \"Password must contain at least 8 characters, including both letters and numbers.\";\n      } else {\n        this.errors.password = \"\";\n      }\n    },\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    },\n    handleSignUp() {\n      this.validateName(); // Ensure name is validated\n      this.validatePassword(); // Ensure password is validated\n\n      if (!this.errors.name && !this.errors.password && this.email && this.gender) {\n        this.isSubmitting = true; // Disable the button\n        setTimeout(() => {\n          this.showSuccessPopup = true;\n          this.isSubmitting = false; // Re-enable the button\n        }, 2000); // Simulate a 2-second server response delay\n      } else {\n        alert(\"Please fill out all fields correctly.\");\n      }\n    },\n    closePopup() {\n      this.showSuccessPopup = false;\n      this.$router.push(\"/log-in\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","isPasswordVisible","email","password","gender","errors","showSuccessPopup","isSubmitting","methods","validateName","namePattern","test","validatePassword","passwordPattern","togglePasswordVisibility","handleSignUp","setTimeout","alert","closePopup","$router","push"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n  <div class=\"signup-container\">\r\n    <div class=\"card-container\">\r\n      <div class=\"card-header\">\r\n        <h2>Sign Up</h2>\r\n        <p>Create a new account to access our exclusive services!</p>\r\n      </div>\r\n      <form class=\"signup-form\" @submit.prevent=\"handleSignUp\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter your full name\"\r\n            v-model=\"name\"\r\n            @blur=\"validateName\"\r\n            required\r\n          />\r\n          <small v-if=\"errors.name\" class=\"error-message\">{{ errors.name }}</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email address\"\r\n            v-model=\"email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <div class=\"password-container\">\r\n            <input\r\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              placeholder=\"Enter a secure password\"\r\n              v-model=\"password\"\r\n              @blur=\"validatePassword\"\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              @click=\"togglePasswordVisibility\"\r\n            >\r\n              {{ isPasswordVisible ? 'Hide' : 'Show' }}\r\n            </button>\r\n          </div>\r\n          <small v-if=\"errors.password\" class=\"error-message\">{{ errors.password }}</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Gender</label>\r\n          <select id=\"gender\" v-model=\"gender\" required>\r\n            <option value=\"\" disabled>Select your gender</option>\r\n            <option value=\"male\">Men</option>\r\n            <option value=\"female\">Women</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"signup-button\"\r\n            :disabled=\"isSubmitting\"\r\n          >\r\n            {{ isSubmitting ? 'Signing Up...' : 'Sign Up' }}\r\n          </button>\r\n        </div>\r\n        <div class=\"form-group already-account\">\r\n          <span>Already have an account? <router-link to=\"/log-in\">Login</router-link></span>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- Registration Success Popup -->\r\n      <div v-if=\"showSuccessPopup\" class=\"success-popup\">\r\n        <p>Registration Successful!</p>\r\n        <button @click=\"closePopup\">OK</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SignUpPage\",\r\n  data() {\r\n    return {\r\n      isPasswordVisible: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      errors: {\r\n        name: \"\",\r\n        password: \"\",\r\n      },\r\n      showSuccessPopup: false,\r\n      isSubmitting: false,\r\n    };\r\n  },\r\n  methods: {\r\n    validateName() {\r\n      const namePattern = /^[A-Za-z\\s]+$/;\r\n      if (!this.name) {\r\n        this.errors.name = \"Full name is required.\";\r\n      } else if (!namePattern.test(this.name)) {\r\n        this.errors.name = \"Name must contain only alphabets.\";\r\n      } else {\r\n        this.errors.name = \"\";\r\n      }\r\n    },\r\n    validatePassword() {\r\n      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n      if (!this.password) {\r\n        this.errors.password = \"Password is required.\";\r\n      } else if (!passwordPattern.test(this.password)) {\r\n        this.errors.password =\r\n          \"Password must contain at least 8 characters, including both letters and numbers.\";\r\n      } else {\r\n        this.errors.password = \"\";\r\n      }\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.isPasswordVisible = !this.isPasswordVisible;\r\n    },\r\n    handleSignUp() {\r\n      this.validateName(); // Ensure name is validated\r\n      this.validatePassword(); // Ensure password is validated\r\n\r\n      if (!this.errors.name && !this.errors.password && this.email && this.gender) {\r\n        this.isSubmitting = true; // Disable the button\r\n        setTimeout(() => {\r\n          this.showSuccessPopup = true;\r\n          this.isSubmitting = false; // Re-enable the button\r\n        }, 2000); // Simulate a 2-second server response delay\r\n      } else {\r\n        alert(\"Please fill out all fields correctly.\");\r\n      }\r\n    },\r\n    closePopup() {\r\n      this.showSuccessPopup = false;\r\n      this.$router.push(\"/log-in\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.signup-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #ff7e5f, #feb47b);\r\n  padding: 0 1rem;\r\n}\r\n\r\n.card-container {\r\n  background: rgba(255, 255, 255, 0.85);\r\n  border-radius: 15px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  width: 100%;\r\n  max-width: 450px;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.card-header {\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.card-header h2 {\r\n  font-size: 2.2rem;\r\n  color: #333;\r\n  font-weight: 700;\r\n}\r\n\r\n.card-header p {\r\n  font-size: 1rem;\r\n  color: #666;\r\n}\r\n\r\n.signup-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.2rem;\r\n}\r\n\r\n.form-group label {\r\n  color: #333;\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\ninput,\r\nselect {\r\n  padding: 0.8rem;\r\n  border-radius: 10px;\r\n  border: 1px solid #ddd;\r\n  background: #f8f8f8;\r\n  color: #333;\r\n  outline: none;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\ninput:focus,\r\nselect:focus {\r\n  border-color: #ff7e5f;\r\n}\r\n\r\n.password-container {\r\n  position: relative;\r\n}\r\n\r\n.password-toggle {\r\n  background: none;\r\n  border: none;\r\n  color: #ff7e5f;\r\n  font-size: 1rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.signup-button {\r\n  padding: 1rem;\r\n  background-color: #ff7e5f;\r\n  color: #fff;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.signup-button:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.signup-button:active {\r\n  transform: scale(0.98);\r\n}\r\n\r\n.already-account {\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.already-account a {\r\n  color: #ff7e5f;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n}\r\n\r\n.success-popup {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 1.5rem;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  color: #fff;\r\n  margin-top: 20px;\r\n}\r\n\r\n.success-popup button {\r\n  background-color: #ff7e5f;\r\n  color: #fff;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n  font-size: 0.85rem;\r\n}\r\n</style>\r\n"],"mappings":";AAmFA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBF,IAAI,EAAE,EAAE;MACRG,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;QACNN,IAAI,EAAE,EAAE;QACRI,QAAQ,EAAE;MACZ,CAAC;MACDG,gBAAgB,EAAE,KAAK;MACvBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,WAAU,GAAI,eAAe;MACnC,IAAI,CAAC,IAAI,CAACX,IAAI,EAAE;QACd,IAAI,CAACM,MAAM,CAACN,IAAG,GAAI,wBAAwB;MAC7C,OAAO,IAAI,CAACW,WAAW,CAACC,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,EAAE;QACvC,IAAI,CAACM,MAAM,CAACN,IAAG,GAAI,mCAAmC;MACxD,OAAO;QACL,IAAI,CAACM,MAAM,CAACN,IAAG,GAAI,EAAE;MACvB;IACF,CAAC;IACDa,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,eAAc,GAAI,wCAAwC;MAChE,IAAI,CAAC,IAAI,CAACV,QAAQ,EAAE;QAClB,IAAI,CAACE,MAAM,CAACF,QAAO,GAAI,uBAAuB;MAChD,OAAO,IAAI,CAACU,eAAe,CAACF,IAAI,CAAC,IAAI,CAACR,QAAQ,CAAC,EAAE;QAC/C,IAAI,CAACE,MAAM,CAACF,QAAO,GACjB,kFAAkF;MACtF,OAAO;QACL,IAAI,CAACE,MAAM,CAACF,QAAO,GAAI,EAAE;MAC3B;IACF,CAAC;IACDW,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACb,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;IAClD,CAAC;IACDc,YAAYA,CAAA,EAAG;MACb,IAAI,CAACN,YAAY,CAAC,CAAC,EAAE;MACrB,IAAI,CAACG,gBAAgB,CAAC,CAAC,EAAE;;MAEzB,IAAI,CAAC,IAAI,CAACP,MAAM,CAACN,IAAG,IAAK,CAAC,IAAI,CAACM,MAAM,CAACF,QAAO,IAAK,IAAI,CAACD,KAAI,IAAK,IAAI,CAACE,MAAM,EAAE;QAC3E,IAAI,CAACG,YAAW,GAAI,IAAI,EAAE;QAC1BS,UAAU,CAAC,MAAM;UACf,IAAI,CAACV,gBAAe,GAAI,IAAI;UAC5B,IAAI,CAACC,YAAW,GAAI,KAAK,EAAE;QAC7B,CAAC,EAAE,IAAI,CAAC,EAAE;MACZ,OAAO;QACLU,KAAK,CAAC,uCAAuC,CAAC;MAChD;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACZ,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}