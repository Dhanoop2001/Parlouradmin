{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-page\"\n};\nconst _hoisted_2 = {\n  class: \"blue-box\"\n};\nconst _hoisted_3 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Welcome, Admin\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"btn signup-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.triggerRipple('signup'))\n  }, \" SIGN UP \"), _createElementVNode(\"button\", {\n    class: \"btn login-btn\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.triggerRipple('login'))\n  }, \" LOGIN \")])]), $data.isRippling ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['ripple', $data.rippleClass]),\n    onAnimationend: _cache[2] || (_cache[2] = (...args) => $options.handleRippleEnd && $options.handleRippleEnd(...args))\n  }, null, 34 /* CLASS, NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","$event","$options","triggerRipple","$data","isRippling","key","_normalizeClass","rippleClass","onAnimationend","args","handleRippleEnd","_createCommentVNode"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-page\">\r\n    <div class=\"blue-box\">\r\n      <h1>Welcome, Admin</h1>\r\n      <div class=\"button-container\">\r\n        <button \r\n          class=\"btn signup-btn\" \r\n          @click=\"triggerRipple('signup')\"\r\n        >\r\n          SIGN UP\r\n        </button>\r\n        <button \r\n          class=\"btn login-btn\" \r\n          @click=\"triggerRipple('login')\"\r\n        >\r\n          LOGIN\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div \r\n      v-if=\"isRippling\" \r\n      :class=\"['ripple', rippleClass]\" \r\n      @animationend=\"handleRippleEnd\"\r\n    ></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AdminHomePage\",\r\n  data() {\r\n    return {\r\n      isRippling: false,\r\n      rippleClass: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    triggerRipple(type) {\r\n      this.isRippling = true;\r\n      this.rippleClass = type === \"signup\" ? \"ripple-signup\" : \"ripple-login\";\r\n      \r\n      // Navigate to respective pages after ripple\r\n      setTimeout(() => {\r\n        if (type === \"signup\") {\r\n          this.$router.push(\"/sign-up\");\r\n        } else {\r\n          this.$router.push(\"/log-in\");\r\n        }\r\n      }, 1000); // Adjust timing if needed\r\n    },\r\n    handleRippleEnd() {\r\n      this.isRippling = false;\r\n      this.rippleClass = \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-page {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-image: url('@/assets/background2.jpg');\r\n  background-size: cover;\r\n  background-position: center;\r\n  color: #fff;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);\r\n  overflow: hidden;\r\n}\r\n\r\n.home-page::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(94, 143, 196, 0.4);\r\n  z-index: -1;\r\n}\r\n\r\nh1 {\r\n  font-size: 3rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn {\r\n  padding: 0.75rem 1.5rem;\r\n  font-size: 1.2rem;\r\n  color: #fff;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: black;\r\n  color: gold;\r\n}\r\n\r\n.signup-btn {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.login-btn {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.blue-box {\r\n  background-color: rgba(0, 0, 0, 0.534);\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.ripple {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 0;\r\n  height: 0;\r\n  border-radius: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 9999;\r\n  animation: rippleEffect 1s forwards ease-in-out;\r\n}\r\n\r\n.ripple-signup {\r\n  background-color: g/* Green for signup */\r\n}\r\n\r\n.ripple-login {\r\n  background-color: rgba(105, 154, 247, 0.5); /* Green for login */\r\n}\r\n\r\n@keyframes rippleEffect {\r\n  from {\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0.8;\r\n  }\r\n  to {\r\n    width: 200vw;\r\n    height: 200vh;\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAkB;;uBAHjCC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJD,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAaM,OAbNE,UAaM,GAZJF,mBAAA,CAKS;IAJPH,KAAK,EAAC,gBAAgB;IACrBM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KACtB,WAED,GACAP,mBAAA,CAKS;IAJPH,KAAK,EAAC,eAAe;IACpBM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KACtB,SAED,E,KAIIC,KAAA,CAAAC,UAAU,I,cADlBX,mBAAA,CAIO;IAvBXY,GAAA;IAqBOb,KAAK,EArBZc,eAAA,YAqByBH,KAAA,CAAAI,WAAW;IAC7BC,cAAY,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAER,QAAA,CAAAS,eAAA,IAAAT,QAAA,CAAAS,eAAA,IAAAD,IAAA,CAAe;8CAtBpCE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}