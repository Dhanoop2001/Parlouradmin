{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AuthCard\",\n  data() {\n    return {\n      showPassword: false,\n      // State to toggle password visibility\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      gender: \"\",\n      errors: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        gender: \"\"\n      }\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    validateForm() {\n      let valid = true;\n      this.errors = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        gender: \"\"\n      };\n\n      // Validate Username\n      if (!this.username) {\n        this.errors.username = \"Username is required.\";\n        valid = false;\n      }\n\n      // Validate Email\n      const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!this.email) {\n        this.errors.email = \"Email is required.\";\n        valid = false;\n      } else if (!emailPattern.test(this.email)) {\n        this.errors.email = \"Please enter a valid email address.\";\n        valid = false;\n      }\n\n      // Validate Password\n      if (!this.password) {\n        this.errors.password = \"Password is required.\";\n        valid = false;\n      } else if (this.password.length < 8) {\n        this.errors.password = \"Password must be at least 8 characters long.\";\n        valid = false;\n      }\n\n      // Validate Gender\n      if (!this.gender) {\n        this.errors.gender = \"Gender is required.\";\n        valid = false;\n      }\n      return valid;\n    },\n    handleSignUp() {\n      if (this.validateForm()) {\n        this.$router.push({\n          name: \"LogIn\"\n        }); // Navigate to the Login page after signup\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","showPassword","username","email","password","gender","errors","methods","togglePasswordVisibility","validateForm","valid","emailPattern","test","length","handleSignUp","$router","push"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n    <div class=\"background\">\r\n      <div class=\"card-container\">\r\n        <!-- Sign Up Card -->\r\n        <div class=\"card front\">\r\n          <h1>Sign Up</h1>\r\n          <form @submit.prevent=\"handleSignUp\">\r\n            <div class=\"form-group\">\r\n              <label for=\"username\">Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                placeholder=\"Enter your name\"\r\n                v-model=\"username\"\r\n                required\r\n              />\r\n              <span v-if=\"errors.username\" class=\"error\">{{ errors.username }}</span>\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                v-model=\"email\"\r\n                required\r\n              />\r\n              <span v-if=\"errors.email\" class=\"error\">{{ errors.email }}</span>\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Password:</label>\r\n              <div class=\"password-container\">\r\n                <input\r\n                  :type=\"showPassword ? 'text' : 'password'\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  v-model=\"password\"\r\n                  required\r\n                />\r\n                <span\r\n                  class=\"password-toggle\"\r\n                  @click=\"togglePasswordVisibility\"\r\n                >\r\n                  {{ showPassword ? 'Hide' : 'Show' }}\r\n                </span>\r\n              </div>\r\n              <span v-if=\"errors.password\" class=\"error\">{{ errors.password }}</span>\r\n            </div>\r\n  \r\n            <div class=\"form-groupdropdown\">\r\n              <label for=\"gender\">Gender:</label>\r\n              <select\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                v-model=\"gender\"\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>Select your gender</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n              </select>\r\n              <span v-if=\"errors.gender\" class=\"error\">{{ errors.gender }}</span>\r\n            </div>\r\n  \r\n            <button type=\"submit\">Sign Up</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"AuthCard\",\r\n    data() {\r\n      return {\r\n        showPassword: false, // State to toggle password visibility\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        gender: \"\",\r\n        errors: {\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          gender: \"\",\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      togglePasswordVisibility() {\r\n        this.showPassword = !this.showPassword;\r\n      },\r\n      validateForm() {\r\n        let valid = true;\r\n        this.errors = { username: \"\", email: \"\", password: \"\", gender: \"\" };\r\n  \r\n        // Validate Username\r\n        if (!this.username) {\r\n          this.errors.username = \"Username is required.\";\r\n          valid = false;\r\n        }\r\n  \r\n        // Validate Email\r\n        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        if (!this.email) {\r\n          this.errors.email = \"Email is required.\";\r\n          valid = false;\r\n        } else if (!emailPattern.test(this.email)) {\r\n          this.errors.email = \"Please enter a valid email address.\";\r\n          valid = false;\r\n        }\r\n  \r\n        // Validate Password\r\n        if (!this.password) {\r\n          this.errors.password = \"Password is required.\";\r\n          valid = false;\r\n        } else if (this.password.length < 8) {\r\n          this.errors.password = \"Password must be at least 8 characters long.\";\r\n          valid = false;\r\n        }\r\n  \r\n        // Validate Gender\r\n        if (!this.gender) {\r\n          this.errors.gender = \"Gender is required.\";\r\n          valid = false;\r\n        }\r\n  \r\n        return valid;\r\n      },\r\n      handleSignUp() {\r\n        if (this.validateForm()) {\r\n          this.$router.push({ name: \"LogIn\" }); // Navigate to the Login page after signup\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .background {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-image: url('@/assets/salon.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: -1;\r\n  }\r\n  \r\n  .card-container {\r\n    width: 400px;\r\n    height: 500px;\r\n    perspective: 1000px;\r\n  }\r\n  \r\n  .card {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n    background-color: black;\r\n    padding: 20px;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  /* General Button and Form Input Styles */\r\n  button,\r\n  input,\r\n  select {\r\n    width: 380px !important; /* Ensure all elements have the same width */\r\n    padding: 10px;\r\n    font-size: 1rem;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box; /* Ensure padding does not affect width */\r\n  }\r\n  \r\n  /* Styling for Button */\r\n  button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #329937;\r\n  }\r\n  \r\n  /* Styling for Inputs and Select */\r\n  input,\r\n  select {\r\n    background-color: white;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .form-group,\r\n  .form-groupdropdown {\r\n    margin-bottom: 15px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .password-container {\r\n    position: relative;\r\n  }\r\n  \r\n  .password-toggle {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 10px;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n    color: #4CAF50;\r\n    font-size: 1rem;\r\n    padding: 5px;\r\n  }\r\n  \r\n  /* Error message styling */\r\n  .error {\r\n    color: red;\r\n    font-size: 0.9rem;\r\n    margin-top: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA6EE,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MAAE;MACrBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;QACNJ,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV;IACF,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACP,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDQ,YAAYA,CAAA,EAAG;MACb,IAAIC,KAAI,GAAI,IAAI;MAChB,IAAI,CAACJ,MAAK,GAAI;QAAEJ,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;;MAEnE;MACA,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;QAClB,IAAI,CAACI,MAAM,CAACJ,QAAO,GAAI,uBAAuB;QAC9CQ,KAAI,GAAI,KAAK;MACf;;MAEA;MACA,MAAMC,YAAW,GAAI,kDAAkD;MACvE,IAAI,CAAC,IAAI,CAACR,KAAK,EAAE;QACf,IAAI,CAACG,MAAM,CAACH,KAAI,GAAI,oBAAoB;QACxCO,KAAI,GAAI,KAAK;MACf,OAAO,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC,EAAE;QACzC,IAAI,CAACG,MAAM,CAACH,KAAI,GAAI,qCAAqC;QACzDO,KAAI,GAAI,KAAK;MACf;;MAEA;MACA,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAE;QAClB,IAAI,CAACE,MAAM,CAACF,QAAO,GAAI,uBAAuB;QAC9CM,KAAI,GAAI,KAAK;MACf,OAAO,IAAI,IAAI,CAACN,QAAQ,CAACS,MAAK,GAAI,CAAC,EAAE;QACnC,IAAI,CAACP,MAAM,CAACF,QAAO,GAAI,8CAA8C;QACrEM,KAAI,GAAI,KAAK;MACf;;MAEA;MACA,IAAI,CAAC,IAAI,CAACL,MAAM,EAAE;QAChB,IAAI,CAACC,MAAM,CAACD,MAAK,GAAI,qBAAqB;QAC1CK,KAAI,GAAI,KAAK;MACf;MAEA,OAAOA,KAAK;IACd,CAAC;IACDI,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACL,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC;UAAEjB,IAAI,EAAE;QAAQ,CAAC,CAAC,EAAE;MACxC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}