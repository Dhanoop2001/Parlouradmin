{"ast":null,"code":"// store.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: {\n      email: '',\n      password: ''\n    }\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    }\n  },\n  actions: {\n    updateUser({\n      commit\n    }, user) {\n      commit('setUser', user);\n    }\n  },\n  getters: {\n    getUserEmail: state => state.user.email,\n    getUserPassword: state => state.user.password,\n    // Specific getters for signup and login actions\n    getSignupUser: state => ({\n      email: state.user.email,\n      password: state.user.password,\n      action: 'signup' // Example attribute for distinguishing actions\n    }),\n    getLoginUser: state => ({\n      email: state.user.email,\n      password: state.user.password,\n      action: 'login' // Example attribute for distinguishing actions\n    })\n  }\n});","map":{"version":3,"names":["createStore","state","user","email","password","mutations","setUser","actions","updateUser","commit","getters","getUserEmail","getUserPassword","getSignupUser","action","getLoginUser"],"sources":["C:/Users/HP-15/Desktop/parlouradmin/parlouradmin/src/store.js"],"sourcesContent":["// store.js\r\nimport { createStore } from 'vuex';\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n  },\r\n  actions: {\r\n    updateUser({ commit }, user) {\r\n      commit('setUser', user);\r\n    },\r\n  },\r\n  getters: {\r\n    getUserEmail: (state) => state.user.email,\r\n    getUserPassword: (state) => state.user.password,\r\n\r\n    // Specific getters for signup and login actions\r\n    getSignupUser: (state) => ({\r\n      email: state.user.email,\r\n      password: state.user.password,\r\n      action: 'signup', // Example attribute for distinguishing actions\r\n    }),\r\n\r\n    getLoginUser: (state) => ({\r\n      email: state.user.email,\r\n      password: state.user.password,\r\n      action: 'login', // Example attribute for distinguishing actions\r\n    }),\r\n  },\r\n});\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACL,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAEP,IAAI,EAAE;MAC3BO,MAAM,CAAC,SAAS,EAAEP,IAAI,CAAC;IACzB;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,YAAY,EAAGV,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK;IACzCS,eAAe,EAAGX,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACE,QAAQ;IAE/C;IACAS,aAAa,EAAGZ,KAAK,KAAM;MACzBE,KAAK,EAAEF,KAAK,CAACC,IAAI,CAACC,KAAK;MACvBC,QAAQ,EAAEH,KAAK,CAACC,IAAI,CAACE,QAAQ;MAC7BU,MAAM,EAAE,QAAQ,CAAE;IACpB,CAAC,CAAC;IAEFC,YAAY,EAAGd,KAAK,KAAM;MACxBE,KAAK,EAAEF,KAAK,CAACC,IAAI,CAACC,KAAK;MACvBC,QAAQ,EAAEH,KAAK,CAACC,IAAI,CAACE,QAAQ;MAC7BU,MAAM,EAAE,OAAO,CAAE;IACnB,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}