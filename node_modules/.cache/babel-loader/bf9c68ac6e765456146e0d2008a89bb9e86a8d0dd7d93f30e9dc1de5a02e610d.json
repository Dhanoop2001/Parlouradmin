{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"AuthPage\",\n  data() {\n    return {\n      isPasswordVisible: false,\n      isSignUpPage: true,\n      // Toggle between Sign Up and Log In\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      gender: \"\",\n      errors: {\n        name: \"\",\n        password: \"\"\n      },\n      showSuccessPopup: false,\n      isSubmitting: false\n    };\n  },\n  methods: {\n    validateName() {\n      const namePattern = /^[A-Za-z\\s]+$/;\n      if (!this.name) {\n        this.errors.name = \"Name is required.\";\n      } else if (!namePattern.test(this.name)) {\n        this.errors.name = \"Name must contain only alphabets.\";\n      } else {\n        this.errors.name = \"\";\n      }\n    },\n    validatePassword() {\n      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n      if (!this.password) {\n        this.errors.password = \"Password is required.\";\n      } else if (!passwordPattern.test(this.password)) {\n        this.errors.password = \"Password must contain at least 8 characters, including both letters and numbers.\";\n      } else {\n        this.errors.password = \"\";\n      }\n    },\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    },\n    async handleSignUp() {\n      this.validateName();\n      this.validatePassword();\n      if (!this.errors.name && !this.errors.password && this.email && this.gender) {\n        this.isSubmitting = true;\n        try {\n          const response = await axios.post('http://localhost:8080/api/register', {\n            name: this.name,\n            email: this.email,\n            password: this.password,\n            gender: this.gender\n          });\n          if (response.status === 200) {\n            this.showSuccessPopup = true;\n            this.isSubmitting = false;\n          }\n        } catch (error) {\n          console.error('Registration failed', error);\n          alert(\"An error occurred during registration. Please try again.\");\n          this.isSubmitting = false;\n        }\n      } else {\n        alert(\"Please fill out all fields correctly.\");\n      }\n    },\n    handleLogin() {\n      if (this.email === \"admin@example.com\" && this.password === \"admin123\") {\n        this.$router.push(\"/adminpanel\");\n      } else {\n        alert(\"Invalid email or password\");\n      }\n    },\n    closePopup() {\n      this.showSuccessPopup = false;\n      this.$router.push(\"/log-in\");\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","isPasswordVisible","isSignUpPage","email","password","gender","errors","showSuccessPopup","isSubmitting","methods","validateName","namePattern","test","validatePassword","passwordPattern","togglePasswordVisibility","handleSignUp","response","post","status","error","console","alert","handleLogin","$router","push","closePopup"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\LogIn.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <!-- Sign Up Section -->\r\n    <div v-if=\"isSignUpPage\">\r\n      <h2 class=\"auth-heading\">Sign Up</h2>\r\n      <form class=\"auth-form\" @submit.prevent=\"handleSignUp\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            v-model=\"name\"\r\n            @blur=\"validateName\"\r\n            required\r\n          />\r\n          <small v-if=\"errors.name\" class=\"error-message\">{{ errors.name }}</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            v-model=\"email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group password-group\">\r\n          <label for=\"password\">Password</label>\r\n          <div class=\"password-container\">\r\n            <input\r\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              v-model=\"password\"\r\n              @blur=\"validatePassword\"\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              @click=\"togglePasswordVisibility\"\r\n            >\r\n              {{ isPasswordVisible ? 'Hide' : 'Show' }}\r\n            </button>\r\n          </div>\r\n          <small v-if=\"errors.password\" class=\"error-message\">{{ errors.password }}</small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Gender</label>\r\n          <select id=\"gender\" v-model=\"gender\" required>\r\n            <option value=\"\" disabled>Select your gender</option>\r\n            <option value=\"male\">Men</option>\r\n            <option value=\"female\">Women</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"auth-button\"\r\n            :disabled=\"isSubmitting\"\r\n          >\r\n            {{ isSubmitting ? 'Submitting...' : 'Sign Up' }}\r\n          </button>\r\n        </div>\r\n        <div class=\"form-group already-account\">\r\n          <span>Already have an account? <router-link to=\"/log-in\">Login</router-link></span>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- Registration Success Popup -->\r\n      <div v-if=\"showSuccessPopup\" class=\"success-popup\">\r\n        <p>Registration Successful!</p>\r\n        <button @click=\"closePopup\">OK</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Log In Section -->\r\n    <div v-if=\"!isSignUpPage\">\r\n      <h2 class=\"auth-heading\">Log In</h2>\r\n      <form class=\"auth-form\" @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group password-group\">\r\n          <label for=\"password\">Password</label>\r\n          <div class=\"password-container\">\r\n            <input\r\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"password-toggle\"\r\n              @click=\"togglePasswordVisibility\"\r\n              :aria-label=\"isPasswordVisible ? 'Hide password' : 'Show password'\"\r\n            >\r\n              {{ isPasswordVisible ? 'Hide' : 'Show' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"auth-button\">Log In</button>\r\n        </div>\r\n        <div class=\"form-group already-account\">\r\n          <span>Don't have an account? <router-link to=\"/sign-up\">Sign Up</router-link></span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"AuthPage\",\r\n  data() {\r\n    return {\r\n      isPasswordVisible: false,\r\n      isSignUpPage: true, // Toggle between Sign Up and Log In\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      errors: {\r\n        name: \"\",\r\n        password: \"\",\r\n      },\r\n      showSuccessPopup: false,\r\n      isSubmitting: false,\r\n    };\r\n  },\r\n  methods: {\r\n    validateName() {\r\n      const namePattern = /^[A-Za-z\\s]+$/;\r\n      if (!this.name) {\r\n        this.errors.name = \"Name is required.\";\r\n      } else if (!namePattern.test(this.name)) {\r\n        this.errors.name = \"Name must contain only alphabets.\";\r\n      } else {\r\n        this.errors.name = \"\";\r\n      }\r\n    },\r\n    validatePassword() {\r\n      const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n      if (!this.password) {\r\n        this.errors.password = \"Password is required.\";\r\n      } else if (!passwordPattern.test(this.password)) {\r\n        this.errors.password =\r\n          \"Password must contain at least 8 characters, including both letters and numbers.\";\r\n      } else {\r\n        this.errors.password = \"\";\r\n      }\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.isPasswordVisible = !this.isPasswordVisible;\r\n    },\r\n    async handleSignUp() {\r\n      this.validateName();\r\n      this.validatePassword();\r\n\r\n      if (!this.errors.name && !this.errors.password && this.email && this.gender) {\r\n        this.isSubmitting = true;\r\n        try {\r\n          const response = await axios.post('http://localhost:8080/api/register', {\r\n            name: this.name,\r\n            email: this.email,\r\n            password: this.password,\r\n            gender: this.gender\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            this.showSuccessPopup = true;\r\n            this.isSubmitting = false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Registration failed', error);\r\n          alert(\"An error occurred during registration. Please try again.\");\r\n          this.isSubmitting = false;\r\n        }\r\n      } else {\r\n        alert(\"Please fill out all fields correctly.\");\r\n      }\r\n    },\r\n    handleLogin() {\r\n      if (this.email === \"admin@example.com\" && this.password === \"admin123\") {\r\n        this.$router.push(\"/adminpanel\");\r\n      } else {\r\n        alert(\"Invalid email or password\");\r\n      }\r\n    },\r\n    closePopup() {\r\n      this.showSuccessPopup = false;\r\n      this.$router.push(\"/log-in\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-image: url('@/assets/salon.jpg');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.auth-heading {\r\n  font-size: 3rem;\r\n  color: #fff;\r\n  margin-bottom: 1.5rem;\r\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.auth-form {\r\n  padding: 2.5rem;\r\n  border-radius: 12px;\r\n  box-shadow: 10px 10px 10px 10px rgba(0, 0, 0, 0.3);\r\n  width: 90%;\r\n  max-width: 450px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  border: solid 1px green;\r\n}\r\n\r\n.auth-form:hover {\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.75rem;\r\n  font-weight: 600;\r\n  color: #ddd;\r\n  font-size: 1.1rem;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\ninput, select {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  background-color: #555;\r\n  color: #fff;\r\n  box-sizing: border-box;\r\n  transition: background-color 0.3s ease, border 0.3s ease;\r\n}\r\n\r\ninput:focus, select:focus {\r\n  background-color: #666;\r\n  outline: none;\r\n  border: 2px solid #66bb6a;\r\n}\r\n\r\n.password-container {\r\n  position: relative;\r\n}\r\n\r\n.password-toggle {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  color: rgb(24, 204, 24);\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n}\r\n\r\n.auth-button {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #66bb6a;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, transform 0.2s ease-in-out;\r\n}\r\n\r\n.auth-button:hover {\r\n  background-color: #4caf50;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.auth-button:active {\r\n  background-color: #388e3c;\r\n  transform: translateY(1px);\r\n}\r\n\r\n.auth-button:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.already-account {\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n}\r\n\r\n.already-account a {\r\n  color: blue;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n.already-account a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.success-popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.success-popup p {\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.success-popup button {\r\n  padding: 0.5rem 1.5rem;\r\n  background-color: #66bb6a;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.success-popup button:hover {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.error-message {\r\n  color: #ff4d4f;\r\n  font-size: 0.9rem;\r\n  margin-top: 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}