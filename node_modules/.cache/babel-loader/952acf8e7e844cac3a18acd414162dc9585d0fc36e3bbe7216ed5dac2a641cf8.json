{"ast":null,"code":"export default {\n  methods: {\n    initiatePayment() {\n      const options = {\n        key: \"YOUR_RAZORPAY_KEY\",\n        // Replace with your Razorpay key\n        amount: 1000,\n        // Amount in the smallest currency unit (e.g., 1000 paise = ₹10)\n        currency: \"INR\",\n        name: \"Your Business Name\",\n        description: \"Test Transaction\",\n        image: \"https://your-logo-url.com\",\n        // Optional\n        handler: function (response) {\n          alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\n        },\n        prefill: {\n          name: \"Customer Name\",\n          email: \"customer@example.com\",\n          contact: \"9999999999\"\n        },\n        notes: {\n          address: \"Customer Address\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n\n      // Ensure Razorpay is available\n      if (typeof Razorpay !== \"undefined\") {\n        const rzp = new Razorpay(options);\n        rzp.open();\n        rzp.on(\"payment.failed\", function (response) {\n          alert(\"Payment Failed: \" + response.error.description);\n        });\n      } else {\n        alert(\"Razorpay script not loaded properly.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["methods","initiatePayment","options","key","amount","currency","name","description","image","handler","response","alert","razorpay_payment_id","prefill","email","contact","notes","address","theme","color","Razorpay","rzp","open","on","error"],"sources":["C:\\Users\\HP-15\\Desktop\\parlouradmin\\parlouradmin\\src\\components\\RazorPay.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Razorpay Payment Gateway</h1>\r\n      <button @click=\"initiatePayment\">Pay Now</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    methods: {\r\n      initiatePayment() {\r\n        const options = {\r\n          key: \"YOUR_RAZORPAY_KEY\", // Replace with your Razorpay key\r\n          amount: 1000, // Amount in the smallest currency unit (e.g., 1000 paise = ₹10)\r\n          currency: \"INR\",\r\n          name: \"Your Business Name\",\r\n          description: \"Test Transaction\",\r\n          image: \"https://your-logo-url.com\", // Optional\r\n          handler: function (response) {\r\n            alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\r\n          },\r\n          prefill: {\r\n            name: \"Customer Name\",\r\n            email: \"customer@example.com\",\r\n            contact: \"9999999999\",\r\n          },\r\n          notes: {\r\n            address: \"Customer Address\",\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\",\r\n          },\r\n        };\r\n  \r\n        // Ensure Razorpay is available\r\n        if (typeof Razorpay !== \"undefined\") {\r\n          const rzp = new Razorpay(options);\r\n          rzp.open();\r\n          rzp.on(\"payment.failed\", function (response) {\r\n            alert(\"Payment Failed: \" + response.error.description);\r\n          });\r\n        } else {\r\n          alert(\"Razorpay script not loaded properly.\");\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  button {\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    background-color: #3399cc;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #287a99;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAQE,eAAe;EACbA,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,MAAMC,OAAM,GAAI;QACdC,GAAG,EAAE,mBAAmB;QAAE;QAC1BC,MAAM,EAAE,IAAI;QAAE;QACdC,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE,oBAAoB;QAC1BC,WAAW,EAAE,kBAAkB;QAC/BC,KAAK,EAAE,2BAA2B;QAAE;QACpCC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;UAC3BC,KAAK,CAAC,mCAAmCD,QAAQ,CAACE,mBAAmB,EAAE,CAAC;QAC1E,CAAC;QACDC,OAAO,EAAE;UACPP,IAAI,EAAE,eAAe;UACrBQ,KAAK,EAAE,sBAAsB;UAC7BC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;;MAED;MACA,IAAI,OAAOC,QAAO,KAAM,WAAW,EAAE;QACnC,MAAMC,GAAE,GAAI,IAAID,QAAQ,CAAClB,OAAO,CAAC;QACjCmB,GAAG,CAACC,IAAI,CAAC,CAAC;QACVD,GAAG,CAACE,EAAE,CAAC,gBAAgB,EAAE,UAAUb,QAAQ,EAAE;UAC3CC,KAAK,CAAC,kBAAiB,GAAID,QAAQ,CAACc,KAAK,CAACjB,WAAW,CAAC;QACxD,CAAC,CAAC;MACJ,OAAO;QACLI,KAAK,CAAC,sCAAsC,CAAC;MAC/C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}